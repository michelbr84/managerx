{
  "branches": [
    "main",
    {
      "name": "beta",
      "prerelease": true
    },
    {
      "name": "alpha",
      "prerelease": true
    }
  ],
  "plugins": [
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "releaseRules": [
          { "type": "feat", "release": "minor" },
          { "type": "fix", "release": "patch" },
          { "type": "perf", "release": "patch" },
          { "type": "revert", "release": "patch" },
          { "type": "docs", "scope": "README", "release": "patch" },
          { "type": "style", "release": false },
          { "type": "chore", "release": false },
          { "type": "refactor", "release": "patch" },
          { "type": "test", "release": false },
          { "type": "build", "release": false },
          { "type": "ci", "release": false },
          { "breaking": true, "release": "major" },
          { "revert": true, "release": "patch" }
        ],
        "parserOpts": {
          "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
        }
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "presetConfig": {
          "types": [
            { "type": "feat", "section": "‚ú® Features", "hidden": false },
            { "type": "fix", "section": "üêõ Bug Fixes", "hidden": false },
            { "type": "perf", "section": "‚ö° Performance", "hidden": false },
            { "type": "revert", "section": "‚è™ Reverts", "hidden": false },
            { "type": "docs", "section": "üìö Documentation", "hidden": false },
            { "type": "style", "section": "üé® Styles", "hidden": true },
            { "type": "chore", "section": "üîß Chores", "hidden": true },
            { "type": "refactor", "section": "‚ôªÔ∏è Refactoring", "hidden": false },
            { "type": "test", "section": "‚úÖ Tests", "hidden": true },
            { "type": "build", "section": "üì¶ Build", "hidden": true },
            { "type": "ci", "section": "üë∑ CI", "hidden": true }
          ]
        },
        "writerOpts": {
          "commitsSort": ["subject", "scope"]
        }
      }
    ],
    [
      "@semantic-release/changelog",
      {
        "changelogFile": "CHANGELOG.md",
        "changelogTitle": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html)."
      }
    ],
    [
      "@semantic-release/npm",
      {
        "npmPublish": false
      }
    ],
    [
      "@semantic-release/exec",
      {
        "prepareCmd": "node scripts/update-version.js ${nextRelease.version} && node scripts/generate-release-notes.js ${nextRelease.version}",
        "publishCmd": "echo 'Version ${nextRelease.version} released!'"
      }
    ],
    [
      "@semantic-release/git",
      {
        "assets": [
          "CHANGELOG.md",
          "package.json",
          "pnpm-lock.yaml",
          "apps/desktop/package.json",
          "apps/desktop/src-tauri/Cargo.toml",
          "apps/desktop/src-tauri/tauri.conf.json",
          "packages/*/package.json",
          "docs/RELEASE_NOTES/*.md"
        ],
        "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
      }
    ],
    [
      "@semantic-release/github",
      {
        "assets": [
          {
            "path": "dist/*.zip",
            "label": "Desktop App (${name})"
          }
        ],
        "successComment": "üéâ This PR is included in version ${nextRelease.version} üéâ\n\nThe release is available on [GitHub release](../releases/tag/v${nextRelease.version})\n\nYour **semantic-release** bot üì¶üöÄ"
      }
    ]
  ]
}