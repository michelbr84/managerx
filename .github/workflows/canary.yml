name: Canary Builds

on:
  schedule:
    # Runs daily at 4:00 AM UTC
    - cron: '0 4 * * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  build-canary:
    name: Build Canary - ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'linux'
            os: ubuntu-latest
            rust-target: 'x86_64-unknown-linux-gnu'
          - platform: 'macos'
            os: macos-latest
            rust-target: 'x86_64-apple-darwin'
          - platform: 'macos-arm'
            os: macos-latest
            rust-target: 'aarch64-apple-darwin'
          - platform: 'windows'
            os: windows-latest
            rust-target: 'x86_64-pc-windows-msvc'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './apps/desktop/src-tauri -> target'

      - name: Install system dependencies (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev librsvg2-dev

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: pnpm -C apps/desktop build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: apps/desktop
          args: --target ${{ matrix.rust-target }}

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Prepare artifacts (Linux)
        if: matrix.platform == 'linux'
        run: |
          mkdir -p canary-artifacts
          cp -r apps/desktop/src-tauri/target/${{ matrix.rust-target }}/release/bundle/deb/*.deb canary-artifacts/ || true
          cp -r apps/desktop/src-tauri/target/${{ matrix.rust-target }}/release/bundle/appimage/*.AppImage canary-artifacts/ || true
          cd canary-artifacts && zip -r ../managerx-canary-${{ matrix.platform }}-${{ steps.date.outputs.date }}.zip . && cd ..

      - name: Prepare artifacts (macOS)
        if: startsWith(matrix.platform, 'macos')
        run: |
          mkdir -p canary-artifacts
          cp -r apps/desktop/src-tauri/target/${{ matrix.rust-target }}/release/bundle/dmg/*.dmg canary-artifacts/ || true
          cp -r apps/desktop/src-tauri/target/${{ matrix.rust-target }}/release/bundle/macos/*.app canary-artifacts/ || true
          cd canary-artifacts && zip -r ../managerx-canary-${{ matrix.platform }}-${{ steps.date.outputs.date }}.zip . && cd ..

      - name: Prepare artifacts (Windows)
        if: matrix.platform == 'windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path canary-artifacts
          Copy-Item "apps/desktop/src-tauri/target/${{ matrix.rust-target }}/release/bundle/msi/*.msi" -Destination "canary-artifacts/" -ErrorAction SilentlyContinue
          Copy-Item "apps/desktop/src-tauri/target/${{ matrix.rust-target }}/release/bundle/nsis/*.exe" -Destination "canary-artifacts/" -ErrorAction SilentlyContinue
          Compress-Archive -Path "canary-artifacts/*" -DestinationPath "managerx-canary-${{ matrix.platform }}-${{ steps.date.outputs.date }}.zip"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: managerx-canary-${{ matrix.platform }}-${{ steps.date.outputs.date }}
          path: managerx-canary-${{ matrix.platform }}-*.zip
          retention-days: 7

  create-canary-release:
    name: Create Canary Release
    needs: build-canary
    runs-on: ubuntu-latest
    if: always() && !cancelled()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: managerx-canary-*
          merge-multiple: true

      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "# 🚀 Canary Build - ${{ steps.date.outputs.date }}" > canary-notes.md
          echo "" >> canary-notes.md
          echo "## ⚠️ Warning" >> canary-notes.md
          echo "This is an automated canary build. It may be unstable and is not recommended for production use." >> canary-notes.md
          echo "" >> canary-notes.md
          echo "## 📦 Available Platforms" >> canary-notes.md
          echo "- Windows (x64)" >> canary-notes.md
          echo "- macOS (Intel)" >> canary-notes.md
          echo "- macOS (Apple Silicon)" >> canary-notes.md
          echo "- Linux (x64)" >> canary-notes.md
          echo "" >> canary-notes.md
          echo "## 📝 Recent Changes" >> canary-notes.md
          echo "Last 10 commits:" >> canary-notes.md
          git log --oneline -10 >> canary-notes.md

      - name: Create Canary Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: canary-${{ steps.date.outputs.date }}
          name: Canary Build ${{ steps.date.outputs.date }}
          body_path: canary-notes.md
          draft: false
          prerelease: true
          files: |
            managerx-canary-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}